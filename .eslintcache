[{"/Users/yolanpibrac/Desktop/dev/simplyk-game/src/reportWebVitals.js":"1","/Users/yolanpibrac/Desktop/dev/simplyk-game/src/index.js":"2","/Users/yolanpibrac/Desktop/dev/simplyk-game/src/components/AppContent/AppContent.jsx":"3","/Users/yolanpibrac/Desktop/dev/simplyk-game/src/components/ClickableCard/ClickableCard.jsx":"4","/Users/yolanpibrac/Desktop/dev/simplyk-game/src/components/Question1/Question1.jsx":"5"},{"size":362,"mtime":1610997130250,"results":"6","hashOfConfig":"7"},{"size":500,"mtime":1610997130249,"results":"8","hashOfConfig":"7"},{"size":3084,"mtime":1611001693521,"results":"9","hashOfConfig":"7"},{"size":716,"mtime":1611000284661,"results":"10","hashOfConfig":"7"},{"size":1560,"mtime":1611000269553,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1bvaaew",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"18","messages":"19","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"20","messages":"21","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},"/Users/yolanpibrac/Desktop/dev/simplyk-game/src/reportWebVitals.js",[],"/Users/yolanpibrac/Desktop/dev/simplyk-game/src/index.js",[],"/Users/yolanpibrac/Desktop/dev/simplyk-game/src/components/AppContent/AppContent.jsx",["23","24"],"/Users/yolanpibrac/Desktop/dev/simplyk-game/src/components/ClickableCard/ClickableCard.jsx",["25","26"],"/Users/yolanpibrac/Desktop/dev/simplyk-game/src/components/Question1/Question1.jsx",["27","28","29","30","31"],"import * as React from \"react\"\nimport { Card, Typography, CardContent, Grid, makeStyles, Divider, Button } from \"@material-ui/core\"\nimport { ClickableCard } from \"../ClickableCard/ClickableCard\"\n\nexport const Question1 = ({setsSelectedAnswer, selectedAnswer}) => {\n\n    const select = (answer) => {\n        if(selectedAnswer === answer){\n            setsSelectedAnswer(null)\n        }else {\n            setsSelectedAnswer(answer)\n        }\n    }\n\n    return (\n        <Grid container spacing={4} >\n        <Grid item xs={1}/>\n        <Grid item xs={3} onClick={() => select(1)}>\n            <ClickableCard  selected={selectedAnswer === 1}>\n                <Typography   variant=\"h4\" gutterBottom>\n                React<br/>\n                Typescript<br/>\n                SQL\n                </Typography>\n            </ClickableCard>\n        </Grid>\n        <Grid item xs={3} onClick={() => select(2)}>\n            <ClickableCard  selected={selectedAnswer === 2}>\n                <Typography   variant=\"h4\" gutterBottom>\n                Html<br/>\n                Javascript<br/>\n                SQL\n                </Typography>\n            </ClickableCard>\n        </Grid>\n        <Grid item xs={3} onClick={() => select(3)}>\n        <ClickableCard selected={selectedAnswer === 3}>\n                <Typography   variant=\"h4\" gutterBottom>\n                React<br/>\n                Python<br/>\n                MongoDb\n                </Typography>\n            </ClickableCard>\n        </Grid>\n        \n        <Grid item xs={1}/>\n        \n    </Grid>\n    )\n}",{"ruleId":"32","severity":1,"message":"33","line":2,"column":10,"nodeType":"34","messageId":"35","endLine":2,"endColumn":14},{"ruleId":"32","severity":1,"message":"36","line":2,"column":28,"nodeType":"34","messageId":"35","endLine":2,"endColumn":39},{"ruleId":"32","severity":1,"message":"37","line":2,"column":16,"nodeType":"34","messageId":"35","endLine":2,"endColumn":26},{"ruleId":"32","severity":1,"message":"38","line":2,"column":41,"nodeType":"34","messageId":"35","endLine":2,"endColumn":45},{"ruleId":"32","severity":1,"message":"33","line":2,"column":10,"nodeType":"34","messageId":"35","endLine":2,"endColumn":14},{"ruleId":"32","severity":1,"message":"36","line":2,"column":28,"nodeType":"34","messageId":"35","endLine":2,"endColumn":39},{"ruleId":"32","severity":1,"message":"39","line":2,"column":47,"nodeType":"34","messageId":"35","endLine":2,"endColumn":57},{"ruleId":"32","severity":1,"message":"40","line":2,"column":59,"nodeType":"34","messageId":"35","endLine":2,"endColumn":66},{"ruleId":"32","severity":1,"message":"41","line":2,"column":68,"nodeType":"34","messageId":"35","endLine":2,"endColumn":74},"no-unused-vars","'Card' is defined but never used.","Identifier","unusedVar","'CardContent' is defined but never used.","'Typography' is defined but never used.","'Grid' is defined but never used.","'makeStyles' is defined but never used.","'Divider' is defined but never used.","'Button' is defined but never used."]